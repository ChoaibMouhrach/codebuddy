datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id String @id @default(cuid())

  name  String? @default("Unkown")
  email String  @unique
  image String?

  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  subscription   Subscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId String

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Role {
  id String @id @default(cuid())

  name  String @unique
  users User[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("roles")
}

model Subscription {
  id String @id @default(cuid())

  name  String @unique
  price Float

  users User[]

  features SubscriptionFeature[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("subscriptions")
}

model SubscriptionFeature {
  id String @id @default(cuid())

  name          String         @unique
  subscriptions Subscription[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("subscription_features")
}
